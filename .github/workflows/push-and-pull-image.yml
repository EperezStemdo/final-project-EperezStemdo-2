name: Push image to Azure Container Registry

on:
  push:
    branches: #[main]
      - '*'

permissions:
  id-token: write
  contents: read
  pull-requests: write

jobs:
  docker-build-push:
    runs-on: ubuntu-latest

      
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_PASSWORD }} 

      - name: Login to ACR
        uses: azure/docker-login@v1
        with:
          login-server: eperezacr.azurecr.io
          username: eperezacr
          password: ${{ secrets.ACR_PASSWORD }}
 

      - name: Get version from composer.json
        id: get_version
        run: |
          version=$(jq -r '.version' app/composer.json)
          echo "VERSION=$VERSION" >> $GITHUB_ENV  
             

      - name: Docker image build, tag & push
        run: |
          docker build -t my-php-app ./app
          docker tag my-php-app eperezacr.azurecr.io/eperez:${{ env.VERSION }}
          docker push eperezacr.azurecr.io/eperez:${{ env.VERSION }}

      
          
  deploy:
    runs-on: ubuntu-latest
    needs: docker-build-push
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - uses: azure/login@v2
        with:
          creds: ${{ secrets.AZ_CREDENTIALS }}

      - name: AKS get credentials
        run: az aks get-credentials --resource-group rg-eperez-dvfinlab --name eperezAKS
        
      - name: Deploy and check pods
        run: |
          kubectl apply -f kubernetes/namespace.yaml
          kubectl create secret docker-registry secret-acr --docker-server=eperezacr.azurecr.io --docker-username=eperezacr --docker-password=${{ secrets.ACR_PASSWORD }} -n php-app
          kubectl apply -f kubernetes/configmap.yaml
          kubectl apply -f kubernetes/deployment.yaml
          kubectl apply -f kubernetes/service.yaml
          kubectl apply -f kubernetes/configmap-phpmyadmin.yml
          kubectl apply -f kubernetes/phpmyadmin-deploy.yml
          kubectl apply -f kubernetes/phpmyadmin-svc.yml
          kubectl get pods -n php-app
        
